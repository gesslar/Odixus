Journal of Development for LPUniversity (AKA TMI-3 or SapidLib)

April 2, 2005:
     I have created the directory structure for my mudlib. I am
     basing it off of how the tmi2 mudlib sets theirs up with a few
     minor tweaks (using home instead of u, droped un-nessary
     directories). I copied over the core files of the Lil (testsuite
     mudlib included with MudOS) and placed them in the new directory
     structure. I plan to rewrtie everything soon (as it needs to be
     done). Files copied over are: master.c, simul_efun.c, valid.c
     command.h, config.h, globals.h, lpctypes.h, tests.h, base.c
     clean_up.c, login.c, and user.c. The first order of business
     is to fix the bugs I have created by placing these files in
     new directories.

     In master.c:

     o Updated inherit to reflect changes to directory structure

     In simul_efun.c

     o Updated user_cwd to reflect changes to directory structure
     o Updated file_owner to reflect changes to directory structure

     globals.h

     o Updated all defines to reflect changes to directory structure
     o Commented out VIRTUAL_D define

     login.c

     o Updated call to cat to reflect changes to directory structure
     o Updated call to new() to use define (USER_OB)

     motd

     o Created and placed in "/adm/etc/motd"
     o Added welcome text to file

     After doing these changes, I saved this journal to "/doc/journal".
     Now it is time to do some designing with the good old pen and
     paper-pad. The first bit is to go through the code that I have
     now and make a list of things that need to be coded/re-coded
     systematicaly.

     Basically: Rewrite everything, get things on the road
          (actually, it is pretty detailed but too messy to share).

     Now cleaning up macro files...

      o Rewrote global.h
      o Rewrote config.h
      o Deleted tests.h
      o Deleted command.h
      o Deleted lpctypes.h
      o Renamed and modifed several defines

      Updated valid.c, master.c, simul_efun.c, login.c, and user.c
      to reflect changes to macro files.

      * Commented out code in flag(), found in master.c
      * Removed the simul-efun 'same' and 'dump-variables'.
      * Renamed /std/base.c to /std/object.c (updated user.c to reflect)
      * Added define to master.c 'SINGLE_DIR' to point to '/adm/obj'
      * Moved all simul_efuns to '/adm/simul_efun/*.c' and included them in
          'simul_efun.c'
      * Deleted simul_efun 'simul' (it was empty).

      Testing changes...

      * I can't be lazy and put defines in #include statements anymore,
         I guess...		So I had to fix that but the mud booted after that.
      * When I connect I had some error in object.c (and I fixed the error was
         going to be in the login.c/user.c by removing the modifiers to the
         global variables in those files. Will have to fix properly later.).
      * I created a really big fat bug with an error in my two macro files. In
        my global, I forgot to have to put an #endif but in config.h I had an
	      #endif that shouldn't have been there. This ment that all files
	      that included config.h would load and the ones that didn't would
	      would complain about needing an #endif at end of file. Anyhow,
	      I fixed it and can now login!

      * Removed a call to 'write' from login.c
      * Copied all the commands that I had craeted in my testlib. Some of these
	      are unmodifed from orginal testsuite but alot are. Only a few of
	      them will stay for long.
      * Removed logon function as it isn't needed in user.c anymore
      * Fixed define in config.h as it was incorrect (to do with where commands
         are).
      * Edited commands to fix bugs with macro file changes. (some commands
         still do not work as of yet because they require changes to user.c that
	      I had made in my testlib).
      * Added function to user.c to set the cwd and modified query_cwd to return
         it.
      * Added simul_efuns 'file_exists' and 'directory_exists'.
      * And thats it for tonight... I spent the last hour studying TMI-2's base
         object, Quite confusing! :)

April 3, 2005:

     Well, I did't start working on the lib intill late because I had alot
     of work todo with the server. I'm done examining the TMI-2's base object
     and I'm pretty confident that I understand it now. I'm going to create
     something similer (though quite a bit less functional) and made it an
     inheritable. I've also designed the user object and I am going to
     work on that. It is sunday night so I won't be able to do too much.

     Just to note, I went through options.h and changed a few with Byre.
     The driver is recompiled and ready to roll.

April 4th, 2005:

     I guess I got _no_ coding done last night but I did get some thinking
     done. I'm working on ob_prop.c, user.c, object.c and login.c today.

     *ob_prop.c coded
     *user.c re-coded
     *login.c fixed-up

     You can now set, delete, add, and query properties on an object
     that inerhites ob_prop.c

     Now it time to update all the commands to query the user
     correctly.

     *Updated all commands to use the new code

     I have decided to add some functions to the base objec and
     user object to query and set variables on the user that need
     special security and speed. I'll be keeping most in an
     inheritable, but certian ones (like password) I'm sure will
     be implemented into user.c (when the time comes).

     * Added, set_name, query_name, set_short, query_short, set_long,
        query_long functions to object.c
     * Added set_password and query_password functions to user.c
     * Updated mud to reflect.

     I re-coded cd.c completly as it was all messed up. It now
     works _alot_ better (though it still needs a bit of work
     for extra features and what not). I think byre is going
     to expand it a bit (he has been a big help so far).

     Anyhow, off to bed for me now!

April 5th, 2005:

     Working on the login object today, as well as fixing up
     all the commands to use of new directory resolution that
     Byre put in.

     * Byre replaced the 'resolve_path' simul_efun.

     Fixed bug with cd.c, where if you passed an absolute path
     with no slash at the end, you would no longer be able to
     enter relative directories as arguments.

     Made master.c write out compile errors. Needs to be fixed so
     that error_handler spits it's stuff out first.

     * Byre rewrote all commands to make use of the new simul_efun (not tested)
     * I added two new functions to user.c (restore_user and save_user)
     * I added a new simul_efun called 'user_data_path'
     * I finished writting the login object (not tested yet).

     Tomorrow we'll have to test out the new stuff tomorow.

April 6th, 2005:

     * New commands implemented
     * Updated commands to make use of cwf
     * Installed new login code
     * Tweaked user.c
     * Added some capitalize() to the mud to make things look good.

     Got quite a bit done today already, which is good but it is pretty
     much just finishing up stuff from yesterday.

     * Made user.c seteuid to user's name
     * Made master.c save ed setup in user's directory if exists.
     * Made master.c retrieve ed setup from user's directory if exists.

     Alrighty... Tomorrow I will code basic rooms, basic security,
     and preperation stuff to get ready for other coders. I'm going
     to have a nice big chat with Byre :)

     * Added loging to the login object.

April 7th, 2005:

     Moved the port from 23 to 4000 because I wanted to install
     a telnet server and put it on that port. I claim ports
     4000-4100 so I think we'll do good :)

     * Modified logging in login.c so that when a user creates,
          it'll note it in the login log as well as the user creation
          log.

    Todo list for today:

    [+] Command paths    : X [07-APR-05]
    [+] Commands         : X [08-APR-05]
    [+] Basic security   : X [05-MAY-05] (Except it isn't so basic)

    Files edited for today's todo list:

         .Command Paths:
                        .- user.c
                        .- login.c

         .Commands:
                        .- mkdir.c (new)    .-   path.c (new)
                        .- rmdir.c (new)    .-   quit.c
                        .-    rm.c          .-   look.c (new)
                        .-    mv.c (new)    .- update.c
                        .-    cp.c (new)    .-    who.c
                        .-   pwd.c (new)    .- uptime.c (new)

    * Byre fixed a bug in the resolve_path simul_efun

    I created an IRC channel and announced it on the mudmagic forums.
    Hopefuly we can get some activity in there and chat it up.
    The address is irc://irc.irchat.tv/#lpc
    Hopefuly this can be more then just a chat room for us, but a chat
    room for the whole lpmud community. I think that would be pretty
    neat, eh?

    Some items I need to think about/ponder are:

      @ Coding Standards  @ The mud's future  @ Staff
      @ Policy            @ The mud's goals   @ Tmi-3 services
      @ Help files        @ master.c          @ Public Image
      @ Security          @ Website           @ Code Quality

April 8th, 2005:

     Well, I'm still up but it is tomorrow. I'm still working on
     those commands and I'm putting a dot in frotn of them as
     soon as I'm done with it. I'm currently working on pwd.c
     Once I'm finished with it, I'm going to bed. I'll be back
     up later to work some more.

     Several hours later...

     Woot, I'm up and ready to code :). I'll first finish up
     those commands and then work on basic security. I'll
     implement a simple system similer to what tmi-2 had for
     temporary use.

     Alrighty, finished those commands that I wanted to get
     done. To tidy everything up, I need to edit object.c
     and void.c so that look.c works.

     Now it is time to add some security to the mud. I'll
     just make it so that admins have read and write everywhere
     and users just have access to their home directory. This
     is temporary.

     Files edited: master.c, valid.c, user.c, object.c, login.c, and
          most file system commands.

     This is giving me alot of grief, hehe. I'll try again
     later.

     Alrighty! I got it implemented and it works just like it
     should! Time to get people to test! (weakoz and sayir)

     The irc channel is getting pretty active :). So active that
     I'm actually really surprised.

     * add simul_efuns 'mud_name', 'lib_name', 'lib_version,
          'driver_version', 'port', and 'arch'.
     * Modified lib to make use of new simul_efuns.
     * Tweaked valid_write() in valid.c
     * Added simul_efuns to protect shutdown() and exec()
     * Modified valid_override() in valid.c to protect shutdown()
          and exec()

April 9th, 2005

     * Modified login.c to automatically create a home directory
          for new users.
     * Fixed security bug in override.c
     * Discussed security with Byre

April 15th, 2005

     I've been busy with real life stuff but I got today to code
     some stuff up. I'm going to work on implementing a full
     security system.

     * Modifed ls.c and removed unused variable 'b''s declaration.
     * Rewrote master.c and valid.c
     * Wrote simul_efun 'log_file'
     * Updated simul_efun.c
     * Updated simul_efun file 'file.c'
     * Modified driver config to not use uids but use privs instead
     * Recompiled driver
     * Updated mudlib to reflect changes.

April 18th, 2005

     Sorry for not keeping you (journal) updated but all I have
     been doing is working away at mudlib security in my declining
     freetime. We are entering the "crunch" time in school.

     * Debugged and fixed several bugs in random areas of the
          mudlib.

April 29th, 2005

     I _almost_ have security done. Hopefuly I'll be able
     to get a fair ammount done this sunday (as I'm busy
     saturday).

     Tmi-3 now has a sourceforge project space now!
     https://sourceforge.net/projects/tmi-3/

     I'm thinking about droping the whole 'SapidLib'
     name and just using Tmi-3. I'll have to consider
     it some more.

     I am still talking to Edison about using his driver.
     Officially, I have said yes but I can't even get
     Tmi-3 to run on his driver without a seg fault
     (or even compile it without modifying source). Time
     will tell, I guess. I still have faith :) A driver
     developer is too good to pass up on.

     Anyhow, I should go write out what I need to do for
     security. I think I just need to code exceptions,
     special security stuff, and then implement it.
     I also have to do some figuring with the priv
     security system. I have some good ideas :)

May 2nd, 2005

     I'm really hyper right now because I'm making big
     progress on my security code. I had done some major
     testing of it the other day and found that it was
     extreamly buggy (and got very fustrated) but tonight,
     with a clear and calm mind, I am able to work through
     those bugs. I _think_ I have them all. What I did was
     totally rewrite the routine the traces back permissions
     through the directory structure (it was wacked). Then I
     made user.c set the user's priv to their name. Then instead
     of relying on the object passed to the valid_<function>,
     I used this_player() (and if there isn't one, resort to
     the object). Hopefuly this is a good way to do it ;)

     After this, I need to:

      o Implement new methods in all valid_<functions>.
      o Make exceptions to the rule (ie. home directories)
      o Allow objects to obtain group clearance based on location
      o Write a simul_efun to override set_privs (for security)
      o And test it all out and find other things that are related
          and will have to be done.

     Pyscluded is going to be working on coding us some full featured
     file system commands and a basic, but enhansible, channel daemon.
     I also have some other projected lined up (including basic rooms)
     in the next little while. The support in the community is growing,
     I hope I can keep my motivation up with it.

May 4th, 2005

     I have been working specifically on getting object privs.
     working today. What I did, was assign them a string based
     on their location (directory) using the privs system. Now
     I just have to work out all the finer points and such.

     * Modified how login.c uses set_privs()
     * Remove the set_privs() from user.c
     * Moved login.c to /adm/daemons/login.c for elevated privilages.
     * Modified config.h to reflect changes

     Now to fix the bugs I made...

     Ok, I think I got them...

     * Configure groups and access

     There is still some problems. I'll work on it tomorrow.

May 5th, 2005

     Woot! It works... I'm 99% sure that everything works!

     Now I just have to get everything _else_ to work with it ;)

     * Modifying log_file() so that it calls a function in master.c
          to do the write_file() (to bypass security).
     * Modifying lib to make use of log_file() instead of write_file()
          when writing to logs.
     * Added code to allow master.c to bypass security.
     * And just fixing small bugs as I come across them.

     Ok, now to just add home directory support. This is the part that
     always really gets me peved off!

     Ok, I kinda got it working. I just got one bug to work out and
     home directories will be working with some really neat features!

May 6th, 2005

     A quick bit of code fixed the bug that I was talking about
     yesterday. Now I just need someone to review my code and
     see if I've missed anything. I just logged on so I'm a bit
     dazed (I hope you know what I mean, you know... I need to
     get my train of thought back).

     Ok, time to make a todo list for security stuff:

     o Test all security and code special security.
          Completed:
                     - read
                     - write
                     - object
                     - everything else can be tested later.
     o Currently, the command 'ls' shows directories that you don't
           have accesss to as files. We need to fix this bug.
     o Create a command to observe and minipulate permissions and access.
     o Tidy up code in valid.c and master.c
     o Configure security for Tmi-3
     o Write documentation

     After that, I think it is time to move onto something else :D

     Ok, night time. I'll continue my work tomorrow or Sunday.

May 7th, 2005

     I'm pretty busy today so I don't know how much I'll get done.

     * Cleaning up code
     * ls command bug
     * bug in cd fixed
     -> What we need is for Pyscluded to hurry up and write fully functional
          commands. *grins*

     Now I just need to write a command to observe and minipulate permissions
     and accesss, write documents, and set everything up for Tmi-3!

May 12th, 2005

     I have decided the command to observe and minipulate permissions
     can come later. We really need to focus on more of the smaller
     stuff first.

     * Comleted documentation for master object (master.c and valid.c)

May 13th, 2005

     Oooo... Friday the 13th!

     * Enhanced login.c
          - Added 30 seconds time-out
          - Added new charachter creation code
          - Cleaned up things in general

     Some things to note:
          > I'm decided to ditch the SapidLib name and just go
               with "Tmi-3" and "Tmi-3 Mudlib". Hopefuly, through
               promotion, we'll be able to make people understand
               that Tmi-3 is an umbrella project (not just the
               mudlib).
          > Pycluded is away
          > We have some new staff

May 16th, 2005

     I was thinking about rooms today.
     Somethings I might want to do in the future are:

          o Obvisously add more functionality that will
               be expected.
          o Compat with TMI-2 rooms.
          o Implement a daemon to handle rooms like diku
               does muds do. This feature will be optional
               to use.
          o Implement Vicore's 3d environment code (not into
               standard room inheritable though).
          o Environmental factors
          o Implement rooms in a way that actually gives the
               feeling of an environment, instead of a bunch
               of little isolated cells.

     I'm also going to be getting rid of the little bit of lil'
     code that is still in the mudlib (which isn't even being
     used). It would be clean_up.c in /std/

     I've also modified my default header for files.
     Instead of having updates and changes, I just have
     something like "//Last updated: May 16th, 2005 by Tacitus"
     Then they can look in my changelog to see what I did.

     I also found several security issues today. I have:

    string temp;
    temp = query_privs(previous_object());
    if(temp == "[admin]" || temp == "[master]" || temp == "[daemon]")
    {
          name = str;
          return 1;
    }
    return 0;

    Someone could currently override query_privs. Also, instead of
    comparing like I do now I should query the master object to see
    if the privs is a member of a group (ie. admin)

    Todo:

          * Added simul_efun called set_privs
          * Pervent override of simul_efun set_privs
          * Add news and information at login
          * Alias daemon
          * Emotion daemon
          * and so much more...

June 21st, 2005

    I'm sorry, I'm sorry! I've just been really really busy.
    I plan to get alot of work done tomorrow on TMI-3. It
    appears that I can only trust myself to get the work
    done and done right.

    Just to note, the following has happened:

    i)  Rust called us out on the use of the TMI-3 name.
          We defended the use and will continue to use it.
    ii) Our Mudos was renamed because Rust got Marius to make
	  a big fit over using the name. Oh well!
   iii) Edison is building houses in a third word country.
    iv) I'm leaving July 11th till September. Edison will take
	  the reigns when I'm gone.

   It is really really early in the morning, so I'm going to go
   to bed and come back in a few hours. Basic todo list for today:

	o Implement rooms
	o Fix unexplained bug
	o Get things sorted out and delegate to people
	o Get basic website up and running
	o Layout production plan for developers

   'Aight! Bed Time :)

		Several hours later...

   Ok, I fixed the bug. The priv of the user was being replaced
   with a standard one instead of their name. So I added a
   set_privs() in user.c This is an obvisous security problem
   that will have to be delt with at a later time.

   Time to implement rooms...
	* Since he thought we need have property logic,
		he coded it into his room object. So, I'm
		going to recode room.c all together and
		implement the other stuff he coded.

	Ok, I just need to debug the code another day!
       I'm having a bit of problem with inheritance.

June 29th, 2005

     I've told lots of people that I plan on releasing
     our first release by the end of the month. I've developed
     the following release cycle:

     **Gamma-One (3 weeks):
     This level is in effect right after a successful release.
     It's a time for developers (and the brave testing teams and
     release builders) to relax, catch breath and think up new
     ideas for the next installment. Generally not too much real
     activity is to be expected for this period, other than developers
     gathering feedback and ideas to prepare for the next release.

     Also, a contest for the default welcome screen is started.

     **Gamma-Two (1 month):
     When the projects for the next release have been defined, the
     release status is bumped to level 2. New ideas have been given
     form, and most of those are likely to be included into the upcoming
     release.

     Also, the contest for the default welcome screen has finished.

     **Beta (3 Weeks):
     The code is released on sourceforge and is ready for testing by the
     brave. There is most likely many bugs and we ask that you please
     report them as soon as possible when detected so that the team can fix
     them. Most of the new features for this release are already implemented
     and it is mainly bug fixing.

     **Alpha (3 Weeks):
     The code is released on sourceforge and is can be considered
     fairly stable. No new features can be implemtned past this point,
     the only modifications will to fix bugs. Reporting bugs is very
     important at this stage.

     **Pre-Release (1 week):
     This is a buffer stage to ensure that everything is ready to role.
     Last minute release notes are created, web pages are published,
     as well as Blender released and announced.

     **Final Release (N/A):
     Finally, all tests have been successful, and no show-stoppers have
     been spotted. The final package for this cycle is released.


     Anyhow... I need to get cracking if I want to be releaed by the end
     of the month (that means I have today and tomorrow to get things
     done).

     Things to note:

      * Icoz has been doing administrative tasks for me.
      * ProPuke is doing us a really wicked website (now apart
          of the team).
      * Everyone else apears to have disappeared. I saw Byre
          the other day for a few seconds but I dunno where he
          is today.

     Things todo today:

          o Rooms should be completly finished today or tomorrow
          o File pager, tail, and head commands should be done today.
          o Get started on player inventory and related
          o Get started on paper work stuff
          o Work on security

     Things todo tomorrow:

          o Heavy testing of security
          o Finish player inventory and related
          o Finish paper work stuff
          o Package and get ready for release.
          o News release


               + what ever else comes up! : )

     Code:

          o I have made object.c inherit ob_prop.c instead
               of the other way around. I have also corrected
               objects affected by this.
          o Fixed an issue in the login daemon that result in a warning.
          o Fixed bugs in room.c
          o Updated user.c to work with rooms.
          o Made void.c a real room :)

          -> Ok, rooms now work and you can move between them.
               Now we need a look command.

               ** At this time, the whole movement is handled in the
                    user object. It should be deported to a go command
                    to allow for more functionality.

          o Updated the look command to include exits.

          Ok, time to shower and mow the lawn! BBIAB

          o Coded a goto command [basic].
          o Added icoz's clone command. [dunno if it works]

          Alrighty, time to work on real life stuff. BBIAB!

June 30th, 2005

     It is currently 1:51am so I am really tired. Just helping
     Gwegster implement his file pager and new simul_efun (file_lines.c).
     I want to make sure he keeps a journal correctly too :)

     Anyhow... -> Me Tired <-
           I'll be back later today.


     Ok, I am back! I'm a bit busy today so I need to hurry and
     get things done. Gwegster and I are both working out of
     the mudlib so things are speeding up a bit.
          * He has coded a nice little file pager (bit buggy though)

     What I need to do between today and tomorrow:

     -o simul_efun override of set_privs
     -o Add security to user object
     -* Fix and tweak file pager (also change default lines displayed to 20)
     -o Correct all commands to follow error reporting standards.
     -* Add nuke cmd
     -o Add news "stuff" to login
     -o Review all macro files
     -o Fix bug in path.c (make it check for duplicate entries)
     -* Add save cmd
     -* Ensure all logs are being written correctly
     o Document every object in the mudlib
     o Write letter to users
     o Write todo list for users to see.
     o Package and ship

      * Items with an astrike will be assigned to Gwegster

     I'll do my RL stuff that needs to be done now and come
     back to this in an hour or so.

     I'm back much later then I should be... :S Oh well!

     * Got website up and running! Woot!!!
     * Fixed a bug with security and simul_efun.c
     * Got someone else working on the lib (jhereg)
     * Has a random visit from someone named Tina (they didn't speak)
     * Gwegster coded a nuke, save, and tell command.
     * Tweaked login.c to ensure that home directories are created.
     * ....

July 1st, 2005

     * Reviewed config.h, global.h, and logs.h (and tweaked config.h)
     * Added login news to login.c
     * Added new player news to login.c
     * Changed header on more simul_efun
             (gwegster made more and tail into simul_efuns)
     * Added set_privs simul_efun override
     * Added security to user.c
     * Fixed bug with login.c's permissions in valid.c
     * Fixed path error
     * Fixed several typos in cd.c
     * Went through all the commands and updated them.

     Ok, I got a huge mother of bug that has to do with
     security and setting privs. The trouble isn't too much
     permissions, it is objects gettign too little or not
     what they deserve.

     Gak... It appears it won't work. I'll just have to do
     things a different way *mumbles off* :)

     Ok... I'm going to get some sleep and then we can finish
     up last minute things. No more new stuff will be added
     intill we do our release.

     So bug fixing, writing documents, and packaging is all that
     is left. Weee Woo Wee Woo! :)

     -> Ok, I'm back at 11:53am!

     Code:

          * Added wall cmd.
          * Made login.c save the user after creation
          * Fixed bug with valid.c and writing to home directories
               on first login.
          * Made login.c make private and public directories.
          * Fixed bug in parsing of access files.
          * Got some work done on the pager. It doesn't work at this time.
          * Fixed bug in mater.c related to parsing out comments in
                    access files.

          -> Time for a break!

          I'm back! It looks like Gwegster didn't see what I did
          and redid everything himself! Oh well! It is 6:20pm and
          I need to hurry. Time to just check things over, document,
          package, and release! (regarding his pager)

----->>>VERSION Alpha-0.01a<<<-----

July 6th, 2005

     Alrighty, the mudlib has been released and it is time to work
     on the next release (The release went well btw). I leave July
     11th so I pretty much have to get everything done for the next
     release in the next few days and make sure someone makes sure
     stuff gets done (which is really stressing me out). I get back
     sometime in september so it is verry possible that the project
     could die while I'm away. That scares the crap out of me.

     Well... Where to start? <g>

     Code:

          * Changed overrides.c so that that simul_efun of shutdown
               will save everyone's user object before shutting down.
          * Made a changelog to properly document changes.
          * Will change short from <name> to <name> [link dead] and
               back to <name> if they reconnect (part of link dead
               clean up).
          * Updated object.c to move the inventory of non-interactive
               objects to the void when being destructed.
          * Fixed bug in update.c
          * ...

July 7th, 2005

      I'm going to start work on a modular channel daemon!

      Alrighty, I've gotten the channel daemon done but
      now to create a plugin and some tweaking of the
      mudlib to test it :) I'll do that latter today as
      I'm pretty tired but before then, time for one more
      quick bug fix!

      * Made look filter the user in the room inventory. <g>

      I just noticed a new bug too! Update isn't destructing
      objects properly thank to me). I'll fix that after I get
      some sleep.

      I'm back and it has been brought to my attention more bugs
      in the lib. I didn't even realize this code got into the
      release so I'm kinda peved off. Oh well! Time to fix it!

      * Fixed tell.c
      * Add simul_efun override destruct
      * Updated update.c
      * Fixed goto.c and made it so that you can do goto <person>

      Webkid has joined the develpment team. I'm putting him in charge
      while I'm away. Lets hope things go well... I'm really scarred
      to let other people have reign of my mudlib.

      Oh my god... So little time and so much to do!

      * Added guest code to login.c

      Going to the movies (pfft. I know!). Be back in a bit.

      Ok, I'm back... Alot has stuff has happened and I'm pretty
      depressed about it all. I'm going to make the next release
      ASAP to correct issues that people have brought before
      us.

      * Fixed goto.c
      * Wrote documents for channel daemon and handed chand_d to Vicore to
          finish (hopefuly have a module ready for release).

     Ok... Time to release!

----->>>VERSION Alpha-0.01PR<<<-----

     Ok, I released and made the following news release:

     [quote]

     I've accidentally acted like an ass all over the place,
     I want to apologize, and make things right. I'm going away
     for a few months starting tomorrow, but when I come back,
     we'll pick the project back up. We'll rechristen the project
     LPUniversity, and try to build a strong relationship with
     the rest of the community, as intended.

     On return, many of the methods that we have employed
     thus far will be changed to reflect a more community based
     project. A council of prestigious lpcommunity members will
     direct the project and ensure that the project holds true to
     it's mandate. Hopefuly with our more defined goals and
     aspirations, we'll be able to be more productive with our
     renewed vitality.

     The project will continue to offer it's current services to the
     community. I hope that this website, which will be refined
     in accoradance to our reform, can become a hub for the lpcommunity.
     I look forward to having indepth discussions about mudlib design,
     helping people with their code, and much more. Hopefuly we can
     create a sapid community, that embraces and celebrates the diversity
     of opinion, for all lpcommunity members to enjoy.

     On one last note, I wish to apologize again to everyone.

     Thank you,

     Cody Somerville

     [/quote]

     Hopefuly this will resolve all issues :)

     o I deleted the good bye message in quit.c by mistake. I put it
          back in.
     o Made the file pager have spaces between prompts and changed header.
     o Modified look.c so that it will display a message if there is
          no exits. Also made it so that if there is no inventory
          in the room, then there isn't so much white space.
     o When using goto to teleport to a file, it will automatically
          add .c to the end if it is not there. Zaphod was complaing
          about this earlier so I figured I'd make his life earier <g>


September 25th, 2005

     Well Well Well... I guess it is time to start developing
     the mudlib again. We have a new, fresh start to work with
     and I'm looking forward to a succesful project.

     There is some bad news though. I think I delete the copy
     of the mudlib that was current and hence erasing a bit of
     work. That is ok but it prevented me from starting earlier
     (it made me feel bad so I didn't want to work on it :P).

     Anyhow, I've gone through most of the files and
     modified the headers to dispaly LPUniveristy instead
     of TMI-3.

     I'm now going to recode the channel module and channel
     daemon commands that got lost.

     Ok, did the module. I'll do the commands and what not
     later. I'm going to go play wulfram II.

September 27th, 2005

     I'm sick :( Time to work anyhow! First on the agenda
     is to debug the chd module localNet then code the
     channel commands. I think I might update the channel
     daemon to be more functional as well (which means
     I'll have to update the documentation).

     * Fixed bug in chdmod_localNet.c
     * Fixed bug and added checking in chan_d.c
     * Coded 'tune' command

     The more and more I work with this the more I realize that
     the channel daemon needs an overhaul to allow it to be
     more functional. I think I got the right idea with the
     channel module extensability modle though.

     * Modified user.c to allow channel daemon interaction.
     * Fixed more bugs in chan_d.c
     * Add function in chan_d to query a channel exists

     Ok, it works now except I get a "what?" after each use.
     I guess I need to add a return somewhere... There we go :)

     * Updated chdmod_localNet.c so that the admin channel acts as
     expected (only admins can use it).

     My plans for chan_d is to allow for more security, ability to
     tune in or out of all channels (maybe even based on module,
     which would be useful for those who don't want to be tuned into
     different networks), list all channels (easy to implement,
     just not implemented), callback (incase channel daemon gets updated)
     and much more. I also want to create an inheritable for modules so
     that they stay some-what standardized and certain repetative functions
     do not need to be copied and pasted.

     Anyhow, I have real life stuf to deal with now! TTYL!

September 30th, 2005

     WOOT! I just recoded the channel daemon and it is sooo much better.
     It now handles name conflicts correctly, has security, and plenty
     of new features to help manage channels.

     o chan_d.c rewrote
     o chdmod_localNet.c rewrote
     o tune.c rewrote

     With tune, you can now tune a specific channel, specific module,
     or all channels. You can also list channels by module or all of them.
     I just have to test everything out and then I'll move onto
     the next project.

     o Updated who.c with new logo

October 1st, 20005

     o Fixed security bug in channel module localNet.

     I've realized that I need to do a bit more with
     the channel daemon. There is a bug with name
     conflicts and I should rewrite the channel
     list commands to be more intuitive.

     o Fixed bug in tune.c where if the channel
          didn't exist, it would says "channel all"
          instead of "channel <name>".
     o Added history function to chdmod localNet
     o Added security to channel listings and made it
          sort the list alphabetically.
     o Fixed channel conflict handling bug


     (Btw, Kudos (thank you) to NegatiVe becuase he
          helped me find bugs in the channel daemon
          today!).

      I've setup a spreadsheet to help me manage
     bugs and 'todo's.

     *WOOT!* I just fixed a bug in the security system
     that I've been trying to track down in ages! The
     master object now has full permissions like it
     should. It was a simple solution, I had to put
     the set_privs() in the function epilog.

     o Fixed security bug in valid_object() (it checked
          the permission of the loading object instead
          of the previous object).
     o Added preloading
     o Added channel module loading to channel daemon at load

     ACK! I just found a big fat security hole. I thought
     that only admin's could execute files in /cmds/adm/
     but it turns out that if they are already loaded by
     another admin, then they can. I fixed this by adding
     the following code to all admin commands:

     if(!master()->query_member(query_privs(previous_object()), "admin")) return 1;

     !Kudos to Tallman for helping me find some bugs today.

     G'night

October 2nd, 2005

     o Comamnd 'tune' only tunes in and out of channels now.
     o Created command called 'channel' that lists channels
          and shows who is tuned into which channels.
     o Updated chan_d.c to return who is tuned into a specific channel.
     o Added some safety checks in user.c in cmd_hook
     o Fixed channel daemon bug. Modules will now register properly
          if channel daemon is updated.
     o Fixed quick bug in room.c
     o Fixed bug in user.c where it would tell the user they have
          entered a room when only the others in the room should
          see the message.
     o Updated object.c so that ids work properly.
     o Rewrote look.c! You can now look at objects in the room
          and it looks alot better! It isn't complete but it is
          alot better!
     o Fixed security bug where users could delete other's public directories.
     o Fixed cat.c bug
     o Fixed typos in cd.c

     I'm doing pretty good today :) I really need to rewrite and expand
     upon the file system commands. They are pretty basic and crapy
     at the moment since we just whipped them up in the beginning to
     get us started.

October 7th, 2005

     o Recompiled the driver and tweaked the compile-time options.
          Main note is that encryption is _much_ stronger now.
     o Rewrote the login daemon to be more effective and functional.
          (You can now reconnect to link-dead bodies too!)

     I reviewed the Foundation II mudlib today. It game me some
     ideas of what I need to get coded. I really want to get
     the mud to a state where other people can really start to
     help develop.

     o Added isMember and adminp simul_efun
     o Added safety check to user.c
          If user has no environment, it'll move the user to
          the void.
     o Fixed typo in look.c
     o Added "user looks at..." messages
     o NOTE: I made all verbs lower_case when interpreted by the user object.
          I left the arguments alone since some commands might want case
          sensitive arguments (such as the channel daemon).


October 8th, 2005

     o Created mud script (based off of TMI-3's Script)
     o Modified shutdown.c so that the mud will return -1 when it shutsdown
     o Created reboot.c which shutsdown the mud but doesn't return -1, telling
          the mud script to reboot the mud.
     o Modified simul_efun overrides to allow for reboot command to work.

     In-ee Min-ee Mine-ee Moe! Today I pick the help system to code!

     Ok, time to test it out and add help functions to every command!

     After getting half-way done with /cmds/std, I have realize that I
     want it to return a string and the help command will write
     it instead of the command. I need to go do RL stuff though, so
     I'll have to do it later.

     Ok, I'm back and am continuing the work.

     ->NOTE: I want to expand security and ensure standards by ensuring
          that files in certain directories inherit a specific file.
          I'm not going to do this right not but I want to remember. <-

     Ok, I updated /cmds/std and made some cosmetic changes to help.
     I think it is time to bring in a few helpers to do stuff like
     this for me. *goes and finds some*

     Ok, I recruited two people:

          o Selene
          o Ummu

     Neither of them have much talent with LPC but they are pretty
     bright and I'm pretty sure they can be an assist :) Heck, they
     might even learn LPC :)

October 9th, 2005

     I had a big interview the two mentioned above last night
     but it was too late to really get started on anything.
     I'm thinking that I'll have to setup a SF.net project
     soon... (something that I'm not looking forward to). It
     is alot of work to set it up but it is going to be needed.
     I don't want to do anything I'll regreat later, so I'll
     plan it out first. I wouldn't mind hosting a solution
     on my website (http://cody.noobify.com) so that everything
     is central. *ponders*

     Anyhow, Today I think I'll making the distinction
     between player and developer. What I might do is
     create a command to minipulate the group and access
     files and then have anyone who is a wizard in a group
     called 'wizard'. This allows us to do things that
     wasn't possible (or easily possible) in TMI-II, such
     as when we have a mailing object in the future -- sending
     mail to all the wizards, or a wizlist, etc. I think
     I might also move away from the term "wizard" to "developer".
     It is something else that I'll have to ponder...
     I mean, then people who come from diku won't be like
     "Wizard?" -- Developer is pretty self-explainatory and isn't
     as stupid as the term "Immortal" <grins>.

     After I create the stuff mentioned above, I'll make changes
     around the mud to reflect it. These changes include updating
     commands, access to channel daemon, help command (I need to create
     a daemon for this), etc.

     ... Alrighty. The command to minipulate the security files
     is coming along nicely. It can now parse the data and
     write it back in the correct form. Now I just need to add
     the interface to the user which is the simple part. I plan
     to make it an interactive, menu-based command. I can see
     that I might combine this command with WMS (Wizard Management
     System, a nice piece of code that I create a while back).

     ACK ACK ACK!!!!

     I delete the compile-time options by mistake the
     other day so I had to redo it by memory. Now the driver
     is unstable and I get messages like
     "*** glibc detected *** double free or corruption (fasttop): 0x08158c90 ***"
     I know the problem is the compile-time options becuase I saved
     the old binary and the old binary runs fine! I'm going to try to
     play the config settigns and see what I can come up with...
     WAIT... I can just get the old compile-time options from my old
     TMI-3 release :D

     FIXED IT! The problem was the PRAGMA_OPTIMIZE. *scolds PRAGMA_OPTIMIZE*
     Now I can get back to developing happily :).

     Anyhow, I'll have to finish this later. Time to go have big
     turkey feast :D

     Ok, lets try to fit some more coding in before dinner.
     First off, I think that in the future I'll create a security
     daemon that will handle what access.c does right now and will
     also have functionality for security auditing. <-- ANOTHER IDEA!

     I got all these good ideas in this Journal, I hope I don't forget
     them :)

October 10th, 2005

     I made a quick fix to login.c to ensure that the login object
     doesn't kill it's self before loging in a valid user.

     About this "security" daemon idea, I think it is something
     I'm going to code once the mudlib becomes more mature. It'll
     basically handle everything security related that the master
     object doesn't or shouldn't.

     Today though, I'm continuing work on the access/group minipulation
     command called 'access'. Once the security daemon gets coded,
     I imagine that I'll rename it to "security". *ponders* Maybe I'll
     create a daemon that handles general mud configuration and I'll
     have a command called 'config' and people would type 'config <topic>'
     to configure a certain item such as login, security, and other
     things that will require a policy based security system or easy
     modification of settings.

     Gah... I'm tired and lazy today.

     Ok, I'm going to take a break and work on something else.
     The access command is 3/5ths done :) I hate making interactive
     commands but they are so neat when they are finished ;)

October 14th, 2005

     Ok, I got an SF.net project setup and it can be found
     at http://www.sourceforge.net/projects/lpuni

     I haven't heard too much from Selene but Ummu has
     been a _BIG_ help :) Swmudrules said that he wants
     to help too, so we'll see where that goes. I really want
     to get AbsentWizard (Eugenides) or Ico2 back on the team,
     they have been good advisors so far.

     I want to have the grand opening of LPUni on the 22nd but
     I'm not sure if that'll happen. I guess we'll see ;)

     I'm going to finish the access command today and then
     see where we go from there. I'm also considering moving
     this "blog" to the web *ponders* The problem is, what
     if someone is developing offline? *ponders* I'll
     have to give it serious thought.

     I got quite a bit done on access but I gotta go
     on an FTX now. Be back on Sudnay.

October 16th, 2005

     I'm back from my navigation exercise. I'm pretty
     loaded down with real life stuff so development is
     going to be at a crawl this week. I'm going to have
     to rely on Jeff (ummu) to make up for it. (Thank God
     For Ummu!).

     - unused variable ('k') in more.c removed
     - access.c ALMOST done (just need to fix bug and make it actually write to
          file. The command is very non-user friendly at this point. IT might
          be a powerful tool in the future though.)
     - Ummu modified all the commands to have a proper help function
          I uploaded and checked them all over.

     I think I might have two include directories (since, I can
     specify more then one in the runtime config file). One that
     is in /adm/include and one that is the normal /include. That
     way I can keep the mission critical ones secure and let
     lower level wizs have access to /include. I'll have to do
     this later since I don't have enough time to do it tonight.

     Well, I got other stuff to work on for the rest of the hour
     that I'll be awake tonight. Lots to do with LPUni so I think
     I might have to push the first release date forward. I'll
     have to rerelease the latest TMI-3 on the project page for
     now.

October 17th, 2005

     I don't have much time tonight (about an hour), so I'm just going
     to rewrite a few readmes, code the change password command, and create
     a list of things that need to be done before release.

     -o Create project policies **(Won't get done this round)**
          - Subproject policy
          - Core developer policy
          - Task policy
          - Release policy
          - Education policy
          - Etc.
     -o Create small area
          - Code 'how much can fit into anotehr object' code
          - Area should be very descriptive and interesting
          - Area should act as a teaching tool
     -o Documentation
          - Document all daemons
          - Document admin objects
          - Document standard objects
          - Document misc mudlib info
          - Document simul-efuns
          - Get driver docs
     -o Daemons
          - Shutdown daemon
          - Help daemon
          - Finger daemon
          - Banish daemon
     -o Misc
          - News object
          - Review all code

     I updated the 'etc readme' and the overall 'mudlib readme' today
     I also coded the passwd.c command

     Found bug: set save in ed does not work.

     Anyhow, nighty night!

October 19th, 2005

     Mighty hell! This week feels like it'll never end!
     We obvisously aren't releasing this weekend. I'm not
     going to rerelease the last one in this project since
     it defeats the purpose (I want to get rid of old, bad
     karma).

     Today I think I'll code the proper ansi terminal
     system.

     Updated driver compile-time configuration:
          Enabled INTERACTIVE_CATCH_TELL

     Updated user.c and login.c to comply with new compile-time
     options.

     Alrighty, I've designed a new color system for the mud.
     I'm going to remove all hard coded ANSI sequences completly.
     Anything that will be displayed to the user goes through
     catch_tell() and recieve_message(). I will then parse
     the color codes there using protocol developed by Pinkfish@Discworld
     except expanded.

     While I'm at all this, I'll need to rewrite a few macro files
     so I also plan to reorganize all the macro files at this time.
     This will most likely make the mud dysfunctional till I get it
     all sorted out. Wish me luck ^^

     As predicts, the mud is currently crippled.

October 20th, 2005

     Weee... I got the mud back up and running!
     I've reorganized the all the macro files and made it more secure.
     However, there is still alot to do to bring it back to
     normal operation.

     I now need to code the color parsing but MudOS isn't being
     very nice. I got this to work before but I don't know why
     it won't work now... :/ Does it have something to do with
     the driver compile-time configuration modification I made?
     Lets find out! WAIT... whats this? The mud is giving me
     errors now. Yeah (It was unresponsive before)! GAH...
     Screw it!

     Ok, I had a meeting with Ummu tonight. We are setting
     our sights on November 10th as our first release of
     LPUniversity.

     Week 1: Core dev
          Primary Focus   : Shutdown daemon
          Secondary Focus : Start on webdev, Reorganize simul-efuns
     Week 2: Mudlib & Release Prep
          Primary Focus   : News object, Inventory commands
          Secondary Focus : Major. Webdev, Code Review
     Week 3: Release Week
          Primary Focus   : Documentation, Webdev, Code Review, Cosmetics
          Secondary Focus : Fine-tuning/tweaking, small bug fixs

      Anyhow, G'Night.

October 22nd, 2005

     Grr... UltraEdit-32 froze on me last night and I lost my
     journal entry for October 21st. Basically, I figured out
     what the problem was with the pinkfish color coding and it
     was the call to the big mapping that was causing it to freeze
     up. What I did to fix it was delete the big mapping and only
     have ansi-terminal support.

     Now that I have that crap done... It is time to move onto
     the other focuses for this weekend (I have tocomplete
     milestone 1). So that means, shutdown, finger, and banish
     daemon.

     I guess I'll do it in order.

     o Shutdown daemon coded.

     -> Ico2 fixed all the help functions (unchecked).
     -> Checked Ico2's work and fixed a few bugs :)

     o Implemented the shutdown daemon (WOOT!)

     Ok, I just had a nice hot shower and am eatting a sandwich. After
     I'm done, I'm going to spend some time teaching Karma and then
     start on the finger daemon.

     Ok, I got Karmah practicing his LPCs -- so lets start on the
     finger daemon!

     o Added a few comments to valid.c

     After getting into finger.c, I realize how worthless it is
     to code at this time because there isn't much info to show!
     I guess I'll throw the finger daemon into the next release
     and after this release, start getting the user object to
     collect info like last time online and stuff like that.

     Now I have all this time on my hands so I might as well
     get started on the website and then I'll code some
     trivial but expected commands like 'home'. After that, I'll
     finish access.c and create makewiz.c

     - Fixed bug in login.c regarding destruction of login object.
     - Made major modifications to simul-efun grouping
     - Deleted sefun 'cat' (Isn't used).
     - Removed all "default" content from lpuni CMS

     Alrighty, well... I'm going to go work on other stuff now!
          *waves*

October 23rd, 2005

     I uninstalled joomla (or what ever it is) and installed mambo.
     I got a theme I like but no content as of yet. Maybe I'll get
     some in later tonight.

     At the moment, I'm teaching Karmah about LPC (he is a good
     student!).

     * Enhanced user.c security GREATLY! :D
     * Enhanced room inheritable functionality
          (add function 'add_exit', 'add_item', and 'remove_item').
     * Reorganized room.c code.
     * Enhanced object.c's move function.
     * Added receive_object code.
     * Added logging to shutdown cmd, reboot cmd, and daemon.
     * Made crash log and shutdown log into one
     * Coded ed save setup master applies
     * Fixed bug in valid apply for saving binaries
     * Add pragma save binaries to master.c and simul_efun.c
     * Will execute each command on each line in .login on login
          and on quit, it will execute each command on each line in
          .quit
     * Create function in user called enter_world and made login
          daemon call it when user completes the login progress.
     * Changed the idle-out on the login object to 1 minutes.
     * Created function in user object call 'exit_world' and made
          the the mudlib call it when the user is disconnected (not
          including link-dead).
     * Fixed a bug in the sefun 'resolve_path' regarding the use of the
          word 'here'.
     * Created a generic workroom.c and put it in /obj/
     * Edited look.c to be able to look at item_descs in a room.
          (Also optimized).
     * Edited login.c to copy over /obj/workroom.c to new
          developer directories.
     * Added check to nuke.c to ensure that the user has an
          environment before sending message to user's environment.
     * Updated void.c and void2.c
     * Edited room.c so that light is set to 1 by default.
     * Created 'home' command.

     G'Night!

October 24th, 2005

     Wee! -- I gots lots down last night :)

     * Add function 'query_env' and 'set_env' in user which
          act as an interface to a mapping stored in the
          user's prop mapping. I did so that I can create
          a command that can allow users to modify environment
          variables (like their enabling ansi).
     * Add a call to set in enter_world and exit_world to
          keep the date the the user was last logged on (or
          has been logged on since). Also added calls to net_dead, etc.
     * Fixed bug in cmd reboot and shutdown regarding parsing of time
     * Created cmd to turn colour on and off
     * Enhanced parsing of colour codes.
     * Created set_env command that lets user set environmental
          variables that will effect how they interact with the
          mud.

October 25th, 2005

     * Updated mudlib readme
     * I noticed that the file pager is buggy. I'll have to recode it.
     * Fixed bug in user object regarding link-dead handling and permissions.
          (A bug that was eatting up quite a bit of log spaces <G>)

October 27th, 2005

     Finally, a day I can really get some work done.

     * Made cosmetic changes to user.c and reorganized the code.
          (I'm going to have to start moving code to inheritable
               sooner or later).
     * Fixed bug regarding reconnecting on link dead
     * Update id code in object.c to be compat with TMI-II

     Ok, I'm now going to code a new file pager that will
     be inherited by user.c
     After this is complete, I'll also move other code
     that deserve it's own inheritable into their own file.

     * Modified user.c for more ansi support and ansi protection
     * BUG: For some reason, reconnect isn't getting called from login.c


     GAH! I can't think straight to night. I'm going to go relax.


October 28th, 2005

     I'm back and I can think straight today (though I do have
          a bit of a head-ache). I'm going to fix the link-dead
          bug. I think I might not be making the user object 'living'
          either, so I'll look into that.

     GAH GAH!!! There is something wrong... very very wrong.
     Omfg... this is horrible! It is really screwed up!

     *tries to fix the problem*

     I'm so angry... I've really broken it is this time.
     I can't isolate the problem... all new accounts are broken
     but old ones work... why??

     FIXED IT! <Grins> Omg... I was really pissed off there.

     if(capitalize(query("short")) == capitalize(query_name() + " [link dead]")) set("short", capitalize(query_name()));

     The above was the problem (in setup()). Stupid me!

     Weee.... reconnect works correctly now! Wee! Happy days!~

     Anyhow... back to work :)

     -> Fixed bug in object.c regarding ids
     -> Fixed Icoz's clean.c up and moved it into /cmds/object/
     -> Fixed Icoz's drop.c up and moved it into /cmds/std/
     -> Fixed Icoz's get.c up and moved it into /cmds/std/
     -> Coded an inventory command and placed it in /cmds/std/
     -> Updated the cmd channel.c for cosmetic changes

     I'll get more done tomorrow and sunday.

October 29th, 2005

     -> Fixed Icoz's force.c up and moved it to /cmds/adm/
     -> Updated user.c to correctly check permissions for the function 'force_me'
     -> Fixed Icoz's give.c up and moved it to /cmds/std/
     -> Updated object.c to return correct value for 'move'

October 30th, 2005

     Sorry I didn't get much done this weekend in regards to actual
     lib coding but I made tons of progress on the website. I also
     have taught _ALOT_ of people LPC this weekend.

     o Made goto.c force the user to look after the movement
     o Fixed bug in object.c regarding moving of the object.
     o Add checking to room.c to prevent dreadful errors
     o Fixed bug in look.c and room.c when a room has no exits
     o Fixed bug regarding ids and made it so that if you provide
          an id as a string instead of string array, it will convert it.

     I'm having fun (though it is SUPER late). I have a done of people
     over on the mud testing code out and we are finding lots of nice
     juicy bugs! I also got a new staff members, John, who just started
     LPC recently but has 6 years of c++ experince.

October 31st, 2005

     Happy Halloween!

     The mud is getting quite a few regular visitors as we approach
     the release date (10 days exclduing today!). We are behind
     schedule but I think it was worth it. Btw, I don't think I mentioned
     it above, but BIG thanks to Weakoz for finding those area code bug.
     By area code, I mean the area type object inheritables (ie. room.c
     and object.c).

     o Made it so that the channel daemon will untune users who
          are not logged in.

     A problem I've noticed lately is calls to functions
     seeming to get ignored. Like, sometimes the channel daemon
     and shutdown daemon will just not respond. I think it has
     something to do with updating them... I'm not sure. No... I
     just updated them and they still work... weird. Anyhow, I have
     homework to do.

     o Updated look.c so that if a long desc of an object
          does't end with '\n', it'll add one.
     o Recoded clone.c
     o Added function to object.c called set_id() to offer
          compatability with different coding styles. It simply
          fowards the call to object.c
     o Made it so non-admins can set_ids() on object.
     o Recoded dest.c
     o Fixed Johndoe's where.c command up and moved it to /cmds/wiz/

     WooT!

     Nighty Night. I'll try to get news object coded this week
     then focus on documentation and code review this weekend
     (As well as the website). I'd really like to code a help
     daemon if I get time.

November 2nd, 2005

     Gad... only 8 more days!

     o eval.c will not work out of the user's home directory isntead of temp
          (Allowing for non-admins to use eval now).
     o Edited master object to have crashes logged to 'crashes' and 'shutdown'
          both. (More detailed crash log will go into 'crashes')
     o Edited master object to write runtime errors to user's home
          directory if file originated from user's home directory.
     o Updated log_error in master object to log compile errors to
          user's home directory if a user caused the compile error.
          It will _ALSO_ log normally to /log/
     o Recompiled driver and modified a few config settings.

November 4th, 2005

     Today I'm going to:
          o Recode file pager (almsot done).
          o Fix security bug in user.c (complete)
               * Updated movement commands
               * Updated login daemon
               * Updated user object
          o Start news object
          o Start on alias daemon
          o Start on documentation

     * Fixed a bug in master object regarding logging of errors.
     * Fixed ansi pinkfish code parsing problem regarding removal
          of illegal pinkfish codes.

November 5th, 2005

     I'm just going to continue with what I was doing yesterday.

     * Coded 'callouts' command moved into "/cmds/wiz"

     I'm trying use get_char() in more.c but it screws everything
     up. If I can get it to work, I might implement it into the user
     object for better handling of input (and more neat features!).
     I tested it in a mud client (RoAClient), bit buggy but still
     works.

     Shower then news object :) Except... I have real life stuff
     to fo first :(

     * Updated login.c to remove the auto_dest call_out just before
          the object destorys it's self (optimization).

November 9th, 2005

     Omg... I've just been sooo busy lately. There is so much
     to do and the release is tomorrow. I'm obvisously not going
     to get everything done... So I need to prioritize:

     a) Website
     b) Documents
     c) Fine-tuning

     And then if I can get some of the other stuff coded,
     it'll be great :)   I might have to try and get
     some of it done before the actual release tomorrow.

     * Updated website
     * Uploaded drive docs

     Tomorrow there is a remembrance day ceremony, so I
     have to go get my dress uniform ready.

November 10th, 2005

     Alrighty! Today is the day for the release :D

           * Added date cmd
           * Wrote release cycle and naming policy
           * Updated login information
           * Created small cafe area.
           * Edited room.c for dynamic item descriptions
           * Updated room.c to see if a room will allow
               an object to leave (release_object apply)
           * Fixed bug in user.c regarding movement.
           * Added function to object.c that goes through
               all the checks to move an object but doesn't
               actually move them, it is called moveAllowed.
           * Added colour to quit cmd
           * Added colour to who cmd

     Ok... I think I'm ready to release :D

     * Updated readme
     * Packaged
     * Released!

November 16th, 2005

     I'm happy to report that the GO was a HUGE SUCCESS!

     Ok ok... back to bussiness now -- hehe. I'll be taking
     a break from development so that I can focus some time
     on other things that I neglected while getting ready for
     this grand re-release. However, I'm going to update a few
     things now that I've noticed since the release so I don't
     forget.

     * Wrote quickstart guide (README.quickstart in etc/)
     * Updated README in etc/
     * Renamed README in etc/ to README.install
     * Moved readme in base directory to etc/README.mudlib
     * Created README in base directory that points the
         user in the right direction.

December 20th, 2005

     Alrighty! It is time to start the next development
     cycle! I'm starting it a bit early becuase LPUni
     has had some big developments. The following is the
     news posting:

 Aurora Mud and LPUniversity Join Forces
 Written by Cody AW Somerville
 Friday, 16 December 2005

Aurora Sky is an infant MUD lying at the center of a dedicated RPI
project and is joining forces with LPUniversity. Aurora will be a
practical implementation of the mudlib in a high-demand environment
to really showcase LPUniversity Mudlib capabilities. It is also
expected that this will allow easier detection of bugs and require
the team to patch issues quickly; creating a higher quality mudlib
and offering greater dependability. Furthermore, this merger will
result in a reformation of LPUniversitys structure; Allowing for
greater fulfillment of its mandate by expanding LPUniversity's
resources and cohesion. The process is expected to span over
the next month to ensure the best possible results. There is
also a lot of changes to made, polices to be forged and updated,
and the start of the next LPUniversity Mudlib development cycle.
 Please visit http://lpuni.sourceforge.net for the latest information.

     Also, we have moved to a NEW host! lpuni.muddomain.net

     I figured out that the problems with MudOS was being
     caused by my host and not my mudlib or MudOS.

     Anyhow, I need to get to bed now but I plan to get some
     heavy work done on LPUniversity soon. The goal of this
     release is to meet the demands that Aurora mud will
     need to start developing a game (and to keep things
     modular enough to update it every release of LPUniversity).
     This is good becuase every other mud is going to need
     the same things. The following is my todo list for this
     relase:

     o Staff Management Tool
     o Project Managemnet Tool
     o News Daemon (and client)
     o Mail Daemon (and client)
     o Security Daemon (and security audit)
     o Help daemon
     o Soul (emote) daemon
     o Alias Daemon
     o Finger Daemon
     o Fix relative path resolution bug
     o New editor (maybe)
     o Autodoc (maybe)
     o Improvements to channel daemon commands
     o Titles
     o Misc. Commands
     o New install script
     o And much more...

     I plan to audit the mudlib heavily (especially security).

     Anyhow, I really need my sleep!

December 21st, 2005

     Already, time to get down and dirt! :D

      The first thing I'm going to do is security.
      I don't really want to do it but it needs to be
      done and should be done first.

       * Working on rewriting valid.c
       * Updated isMember and adminp simul_efun
       * Updated set_priv simul_efun override
          (If set_priv is setting the priv to the user's priv, then allow
               if in user's home directory.)
       * Updated user.c
       * Updated mudlib to use isMember instead of making direct call
               to old master object function.
       * Changed all debug statement to write to file (/log/security)
       * Typed up documentation for master.c

     WOOT! I got it done! I think the mud is much more
     secure now (I still need to do enhance security for
     shadowing though) and the code is sooo much easier to
     read. I broke alot of stuff with this big change (and fixed
     them), so the mud MUST be more secure <g>.

     * Updated master.c to save ed setup to user's object properties
          instead of to file in user's directory.
     * Fixed bug with logging error to user's directory.
     * Modified master.c to display compile error to user
     * Rewrote file pager
     * Updated login.c autodestruct code
     * Got access command to RC1 (fixed bugs + maj. improvements)
     * Planned out security daemon

December 23rd, 2005

     * Fixed redefinition errors from ansi.h using preproccessor trick

December 27th, 2005

     I had an excellent Christmas :) I got a new 19" Flatscreen monitor,
     wireless optical mouse with a recharger built into the reciever,
     a new John Grisham book, clothing, a subscription to readers digest,
     some money and gift cards, stylish headphone, hygiene/bath stuff,
     and tons of other neat stuff that I wanted/needed. The biggest benefit
     is that I can see more lines of code at once now with my very cool,
     and much bigger, monitor !<g>

     Anyhow, I've got a head-ache.. I'm a bit ill - Maybe from eatting
     too much? And to boot, I'm feeling a bit down in the dumps about
     myself... But I don't want to bore you with my personal life -
     This is a journal of development, not a soap-opera!

     Anyhow, I plan to do the alias daemon now. I just need to decide
     where I'm actually going to put the code. I'm thinking I'll create
     a sub-directory in /std/ for the user object and all it's inheritables.
     We are starting to a get to a time where things could get very messy
     (which ofcourse, that would be something I _do not_ want!). *ponders*

     ok:

     /std/<component>

     Example:

     /std/object/
     /std/user/
     etc.

     I want to use this format even if the component only has one file.
     This way things will stay modular and organized. Also, we'll be
     able to calculate dependencies in the future.

January  2nd, 2006

     Welcome to 2006 :]

     Time to get BUSY! :D

     I reorganized the standard inheritables as follows:

     /std/object/object.c
     /std/object/ob_prop.c

     /std/user/user.c

     /std/area/rooms/room.c

     Then I'm going to write documentation for it all then move onto
     aliases.

     Ok, I got the alias code done but the mud is running
     out of memory and crashing when I call it... Super wierd.
     I tried it on an older version of MudOS on a different box
     and it works fine... *ponders*

     I'm going to move on and come back to it later.

January 3rd, 2006

     I got the normal aliases to work but I need to get the xverbs to
     work. All I did was reduce the proccessing in
     string parse_str(string verb, string args); by having me pass the
     verb and the arguments (removing the call to sscanf).

     Garr... I'm back at square one. This whole thing is pissing me.
     The interpreter is SOOOO crappy! It is missing the most basic
     of errors. I'm on the edge of hunting Beek down and murdering
     him *grrs*. The code works on older versions of MudOS, so no
     doubt his changes are the cause for this too *sighs*.

January 5th, 2006

     It is 1am in the morning and I just completed a pretty major
     update to the website. I populated alot of the link categories,
     added an faq, and redid the LPUniversity services page.

     I've also moved the irc channel from #lpc to ##lpc
      (Yes, we now have an 'about channel' on freenode)

     I'm going to take a quick crack and fixing the alias daemon
     but I need to go to bed soon becuase I have a dentis appointmnet
     in ten hours.

     GARRR!!! I have no idea what is causing the driver to run
     out of memeory. Operations like this happen all across the mud!

     Super odd... I just wrtoe a quick command to invoke it instead
     of invoking it from eval and it doesn't crash... nvm. :[ *sighs*

     GARRR!!!

January 13th, 2006

     WOOT! After countless hours of debugging I fixed the problem.

     [quote]
     # maximum length of a string variable
     maximum string length : 2000000000
     [/quote]

     I guess the mud doesn't like that. I changed it back to:

     [quote]
     # maximum length of a string variable
     maximum string length : 200000
     [/quote]

     And the code now works! *whipes brow* Wow! Ok. I got to
     go clean up my mess now. <g>

     Ok, now to finish the alias daemon! :]

     Ok, both verbs and xverbs work :].

January 14th, 2006

     Ok. My goal today is to completly implement the alias daemon.
     So, I'm going to create a global alias daemon right now that
     allows you to assign global aliases to groups (and to the
     mystical "all" group).

     * Created ga_server.c
     * Created alias command (added security)
     * Updated alias code (added ability to remove and security)
     * Updated user.c (fixed up some comments and added inherit of alias code)
     * Updated mudlib.h (added GA_SERVER def and added protection from redef)

     WOOT! Aliases are now implmeneted. I just need to cleanup and ensure
     global aliases are working.

     * Created unalias.c command
     * Fixed everything up.

     Ok, now to do a bit more testing then I'll be done :D.

     * Fixed user.c and alias.c so that aliases work correctly
          when no arguments and provided.

     Alrighty, I'm pretty sure that the alias system is implemented
     and working correctly. Woot! :]

     * Fixed timestamp bug in chdmod_localNet.c and optimized
          code.

     Ok, I'm going to develop the news system next since keeping
     people informed of development and what not is pretty important.

     Hmmm... I just realized that the current editor won't let me
     do what I want to do. This means I'll have to put the news
     client on hold and develop a new editor first. Hrmph. I deleted
     the files from the mud and will just get the backup files from
     my HD when I continue it. I got the daemon done and a majority
     of the client.

     * Rewrote 'log' command.
     * Added logging for net-deads
     * Improved logging in shutdown daemon
     * Tweaked shutdown notification
     * Created security_editor object
     * Created makewiz command
     * Created wizardp simul-efun
     * Tweaked adminp (to use query_privs instead of query_name)

     Err... I think I'll get rid of the wizard terminology.

     * created devp simul-efun (wizardp still works)
     * changed makewiz to makedev
     * created revdev cmd
     * aliased makewiz and dewiz to makewiz and revdev respectively

January 15th, 2005

     Wow... I didn't realize it was so late. It appears it was
     rolled onto the next day <g>.

     * Edited localnet to allow only developers to access
          channels 'wiz' and 'dev'.
     * Added new channel 'chat'.
     * Pwhiped! (*gasps*) <g>

     Anyhow. Sleep time!

     Ok, I'm back up :]

     * Made the 'more' pager command check to see if the file exists.

     I just quickly read through my journal entries for the last few
     days and I guess I should take back what I said about beek becuase
     the issue was my fault (though I dunno if olders verisons would
     have still worked, so it could still be his fault <g>) but the
     interpreter is a bit butched up after he redid it. *shrugs* What
     can you do though? I'm sure they've added things that I don't
     even realize that I'm apprecaiting. :]

     Anyhow, I'm going to go shower and get ready for the day and
     see what I'll code today (though it might be very little since
     I need to do to some RL stuff first).

     * Fixed bug in localNet (colouring of chat channel history).
     * Added security to log_file in master.c
     * /adm/obj/* will now recieve priv [adm_obj] instead of [master].
          -> WOOT! 2000's line!! <-
     * Changed back to normal malloc (I had it set to smalloc to try
          and debug the alias problem).
     * Tweaked a few other settings in local_options
     * Tweaked runtime config file
     * Improved security for shadowing (adding hook 'disallow_shadow'
          It disallow_shadow returns 1 in object, then shadow
          will not occur.)
     * Improved security for linking
     * Changed valid_save_binary to always allow the saving of binaries
     * Created command 'ln' (aliased link to ln as well)
     * Rewrote channel command
     * Deleted tune command

January 16th, 2006

     I almost perfected the alias daemon. I got $n working
     except when there is wierd spacing like "test 1   2    3"
     where test is aliased to "test say $2 $1 $*" then you'll
     get an extra space between the the verb and the argument
     when returned. I'll come back to it at a later date.

     I can't do anything tomorrow, but the day after that I plan
     to go through all the objects in the lib and add/make sure
     there is modifieres on functions and variable to protect
     them. :]

     ( I take that back .. there are some problems with white
          spaces. I'll have to spend some more time on the
          alias daemon ).

January 17th, 2006

     The bug might actually just be in my new channel
     command <g>. Either way, I've rewritten the parsing
     code to be more clean and effective.

     The only bug I can see now is that it $n tokens aren't
     parsed if they come after the $* token. Also, there
     might be a problem with spacing still.

January 19th, 2006

     I got _alot_ of work done on the website yesterday.
     I added new login manager, new acct. creation, new
     profile system, private messenger, forums, new content,
     and lots of integration -- It is _sweet_.

     Anyhow, I'm going to finally finish off aliases completly
     today and then start work on the new improved editor.

     Ok - Finished alias daemon.

     Note to self:

          [code]
               int n;
               string test = "$* $1";
               sscanf("%*s$%n$*s", n);
          [/code]

          Above detected $* but since it isn't a
          number, it stoped.

     @@End of Note

     Ok! Now onto bigger and better thingers :]

January 20th, 2006

     I wrote two documents tonight, "Human Resource Managment" and
     "Organization structure". It was... boring. lol. I've been
     having meeting everyday this week with the more senior staff
     to gets policies and what-not set -- it is super boring <g>.
     Anyhow, I'm going to document that alias system now ;].

     * Documented Alias System
     * Documented Global Alias Daemon

January 25th, 2006

     o Fixed bug in adm cmd 'wall'.
     o Added msgs to 'goto' and 'home' cmd. It will now inform
          the room the user was originally in that they left.
     o Enhanced cmd 'cp' (error checking and other treats).
     o Added catch to eval cmd

January 27th, 2006

     o Made makedev.c automatically create journal and link it to
          a file in their private directory. This will allow them
          to edit their journal without editing in /doc/journals/
     o Fixed typo in revdev.c
     o Added a bit of colour to makdev.c
     o Gave permission to admin group to link in /home/*
     o Added a few aliases regarding makedev and revdev

     Time to work on news stuff :]

     o Developed news daemon
     o Developed news client (first prototype)
     o Created 'news' cmd.

January 29th, 2006

     Time to code code code code <g>

      * Polished off std_newsclient.c
          (Still needs more polishing + more features)

Febuary 4th, 2006

     Oh man, I've been so busy with real life and it doesn't seem
     like it is going to let up anytime soon. I guess I'll just
     try to chug on as much as I can.

          * Added help function for 'passwd' cmd
          * Fixed the 'Error: *Wrong permissions for opening file
               /log//home/e/eugenides/log for append. ' bug.

Febuary 17th, 2006

     o User.c will now lower_case the verb after alias parsing
          now instead of before so that xverbs don't lower_case
          the first argument.
     o Fixed bug in channel cmd regarding tuning into individual
          channels.
     o Got some work done on news client
          - Will only display 20 listing best on current Index
          - Added more error checking
          - Ability to manual set current index

     I think I just need to add in an admin interface and
     then we'll be all done the coding part of the news system
     (I think).

     I think Eugenides help system will be completed soon.

     I need sleep now.

Febuary 26th, 2006

     Damn life. :/

     * Started news admin client.
          -> I think I'll get someone else to write it.


March 22nd, 2006

	I'm a bad bad boy, aren't I? Gah!

	Anyhow, hopefuly things will start moving again :]
	The website was down for awhile (and still would be except I moved
	hosts) -- It turns out illhostit.com was as good hosts as I thought
	they were... oh well :( While the site was down, btw, I got some
	interesting e-mails from different people asking me to ditch lpuni
	and help them on their projects - I was tempted but I did not giveth
	in. <g>

	Anyhow - I added file repository to the website and will hopefuly keep
	tinkering away at the website in hopes of creating an amazing
	community webs portal :]

	Regarding the mudlib, I'm going to do the following before the next
	release:

	 - Finish news daemon
	 - Mail daemon
	 - Finish help daemon
	 - Soul daemon
	 - Project/Staff mgt. tools
	 - Ability to upgrade mudlib easily (?)
	 - Install script
	 - Documentation

	I _really_ want to make a release but this release needs to make
	a bang and make it easy to upgrade.

	Anyhow - I'm off to bed. Btw, I'm now using linux full time -
	I ditched gnome for KDE and found that Kate is a pretty nice
	editor. <g> Nighty night!

March 24th, 2006

	Ok, I got some big developments to share :]

	- DS and LPUniversity are now affiliates and we are considering
	merging (ie. DS being a subproject of LPUniversity)
	- I've decided to make a release this weekend.

	Elaborating on the second item (even though I know I should
	elaborate on the first), I feel that making this early release
	(we haven't meet the criteria we set) will help stimulate interest.
	Plus there are some issues with the driver in the old version -
	This release is LONG over due! I'm positive that even though this
	won't exactly be the revolutionary release I wanted it to be it will
	help us obtain that revolutionary mudlib that I long for.

	So, what will get done this weekend? A LOT! :D First, I'm going
	to take a look at Eugenides's help system and see if it is a keeper.

	- goes to do so -

	Ack! Oh my - It is a big trail of bugs! :/

	Ok, break from that. I'm going to just do some random testing
	to find bugs in the mudlib (becuase I'm in the mood).

	- Made it so that players can't be picked up <g>
	- Made news client destruct after exiting
	- Made channel daemon, tell, and say all add a % ^ RESET % ^ automatically
		to the end. I also added it to localNet logging.
		(woot - no more colour bleeding!)
	- Made it impossible to shadow master object or valid.c
	- Enhanced security editor object
	- Made nuke remove user's membership from all groups

	I know I could be creating the admin interface for the news daemon
	but I think I'm going to implement Intermud :] I'm going to implement
	I3 since then I can create my own channel for LPUniversity mudlibs.

	Woot - I got the framework in for my i3 client. I just need to
	implement the packets and it should (hopefuly) work! Anyhow, it is
	now Saturday so I should get to bed <g>.

March 25th, 2006

	Ok, time to finish I3 crap.

	In other news, Mordro came and visited me last time and told me
	he liked our project and wanted to help out. So I've assigned him
	the admin front-end to news system - lets hope it gets done :]

	Updated on I3: Now implementing channel service (ie. almost done!!)
	This is a _lot_ easier then I thought it would be :] Kudos to I3
	specification writers! :D

	* Channel daemon will now pass an integer with it's call to isAllowed
		to let the network module know if the user is trying to
		tune in or tune out.

	Ok, time to test it out :]

	From dead souls:

	> mudlist -m lpuni

	Detailed information on LPUniversity:
	MUD Type: LPMud  Server: MudOS v22.2b14       Library: LPUniversity
	Status: Mudlib Development
	Admin email: cody.somerville@gmail.com
	Services:
	Host: 70.85.244.100
	Telnet port: 6000

	WOOT! The problem though? I got some bugs in other part of the mudlib
	I need to work out:

	Error: *built-in sort_array() can only handle homogeneous arrays of strings/ints/floats/arrays

	... OH Crap! I forgot to save the passwd I got from the router. Gah!

	::7 hours and 27 minutes later :: Ok - I'm back - Time to work!

	* Fixed bug in channel command (in help function)

	I've decided that since there is SOOOOO many i3 channels that are
	just crap that for the mud to get access to an i3 channel they must
	add the channel's name to /adm/etc/i3_channels to get whitelisted.
	I'll add an admin-frontend (and the ability to switch between
	blacklisting and whitelisting) in the next release.

	WOOT! IT WORKS! :D

	 * Implemented I3's Channel Service
	 * Modified chan_d.c to reset listener list on re-registering of module.
	 * Enhanced security in chan_d.c
	 * Added ability to unregister module in chan_d.c

	 Oh man - I3 is so laggy! <GARS!>

	 * Created lpuni channelon i3
	 * Cleaned up motd, first_login, and news
	 * New posts are now paged instead of spit out all at once
	 * Added callback ability to pager.
	 * Fixed up I3 client some more

	Ok! Time for bed. I'll finish the finger daemon and news
	system tomorrow. - Oh, and the new install script too. If
	I have time, I might expand the LPUniversity "cafe".

	My new goal: To start a community around the mudlib.
	 Hopefuly this new release will allow for that :]

March 26th, 2006

	 Today is the day! :D

	  * Added "new post" notifcation inside of newsclient
	  * Added "new post" notification at login

	TODO BEFORE RELEASE:

		* News client admin interface (not looking forward to coding this)
		* Finger daemon (Should be fun)
		* Install script
		* Some documentation

	I think I'll take a quick break, get something to eat, and start on
	the finger daemon. I haven't seen that guy so I think I'll have
	to code the news client front-end.

		* I3 Network module will load on boot now
		* Completed finger daemon
		* Created "finger" command.
		* Fixed bug in dest.c
		* Login retrieves and tries to verify e-mail address
		* Put hard-coded wrapping into channel list
		* Updated help file for tell
		* Mud will respond to locate-req packets now

	Ok, Time to do some real life stuff then I'll create the
	admin front-end then the install script. Hopefuly I'll have
	time to get some documentation done. While I'm away doing
	this I'll get some people to go stomp around in the mud and
	see if they can find some bugs.

	Gah, I'm back and it is late. I gotta hurry up. I'm just going
	to fix some typos, make install script, write help for news client,
	finish channel daemon document, and any other quick documents I can
	think of if I have time then release.

		* Fixed typos in LPUniversity Area
		* Add help function to news command

	Ditching install script for this release - No time to test it.


01-APR-06

	WOOT! The release went really really well and continues to go
	well! We went from like 89% activity to 99.42% and it continues
	to go up up up! After the release we also got several e-mails
	about interest in the project, we've hired a few more people and
	plan to hire even more people (The CSS might finally have a
	director!! <G>). This is some really really exciting times!

	... I just realized that tomorrow the mudlib will be one year old!!
	Wow... we've came a long way! :] I think I'm going to make a blog
	entry tomorow on the site reflecting our year :] OooOoo... We so
	must have a virtual mud party <G>

	Time to code :]

	 * Fixed bug in logging when i3 mod in standalone mode.
	 * Added socke_close close calls in i3 mod
	 * Fixed shutdown notification bug

	I need to draw out plans for the next release... ::gets paper and pencil::

	TODO for next release:

	- Refractor I3 module (Socket code, I3 code, chan module code) [1 Day]
	- Refractor user data storage [1 day] (COMPLETE)
	- News Admin front-end [1 day] (COMPLETE)
	- Fully implement I3 Services (except for OOB services) [2 days]
	- Channel daemon & module admin front-end (refractor localNet) [3 days]
	- Central admin tool [1 day]
	- Install & Setup code [3 Days] (COMPLETE)
	- Mail System [4 days]
	- Help System [4 days]
	- Documentation [5 days]
	- Staff & Project Mgt. Tools [7 days]
	- Expand LPUniversity Cafe [2 days]
	- Makeadmin cmd [1 day]
	- Socket security [2 days]

	Thats a total of 37 days (if my math is correct) but some of that stuff
	can be accomplished on the same day BUT I don't work everyday on the mudlib
	everyday. So... I'm going to predict the next release will happen on...

	:: drum roll ::

	May 16th, 2006 :] Thats 47 days... Do I really think we'll meet that
	deadline? Not really but w/e :]

April 15th, 2006

	haha - I haven't really been a bad-boy by not working in the mudlib.
	I'be been busy working on the website and related stuff - It is turning
	out really nice.

	Anyhow, I've decided to make a small release on Monday (Today is Saturday
	evening). Why? I feel like the last release was rushed and I want to
	smooth those spots out and I want to release a windows version. So, this
	is my work list for the next release:

	  o Install Script
	  o Fix News Clients Permission Bug
	  o Refractor user data storage
	  o News Admin Interface
	  o A bit of documentation
	  o Windows version

	Plus whatever else I can squeeze in. : ] Well... lets get crackin'!

	 - Alright. Users now get a whole directory to store user data in.
	 - Fixed news client permission bug - it now saves in the user's data directory.
	 - Finished news admin interface (woot!)

	 Wow... that did go quick. Now the install script :]

	 WOOT! I got the install script done. Now I just need to do
	 the in-mud install stuff. I think I might make it so that the
	 login screen can have "tags" that are autoamtically replaced. So like:

	 $name

	 Would be replaced with the name of the mud :]

	 - Completed install script (needs testing)
	 - If a user account does not have a password but they exist, they will set it on login
	 - If /adm/etc/autowiz exists then the login object will makedev the logging in user and
	 	delete that file.

April 16th, 2006

	It is a late night <g>. I'm just going to go to finish this and goto bed.

	 * Fixed bug in i3mud
	 * Added channel daemon to preload

	 Alrighty, 12 hours later :D

	 * got lots more work done on the site this morning
	 * makedev and revdev will "save" the user after completing the task
	 * room.c will not call setup on create
	 * Add function query_roomType() that will return 1;
	 	(can be overriden for special rooms in the future)
	 * If function is "restore_object" and the object is trying to read and
		find_object(FINGER_D) is a member of all_previous_objects() then valid.c
		will always return 1. This allows for non-admins to finger other users.

	Well, I'm going to go do something else for a little bit (maybe get
	something to eat).

	* Wrote channel daemon document (It lacks the "technical" component to it though)

	Ok, I'm going to package the mudlib now. Test the install stuff and
	then make the windows package.

April 30th, 2006

	Alrighty. I've been focusing heavily on the website the last few weeks
	and have gotten a lot done on it :] I'm quite happy with it but it
	still needs a lot of work.

	* Fixed case bug in finger daemon

	(The release went well btw :D)

May 5th, 2006

     I've been sick :(

     The good news? I think someone is using the mudlib for their
     project :] I guess I should get coding ;]

     * Rewrote nuke command
     * Edited makedev, revdev, give, tell, goto, and home so that
          they lower case arguments that are user's names so that
          if someone does tell Tacitus it'll work.
     * Created reply command
     * Added version command
     * Added sockinfo command

May 6th, 2006

     I'm still feeling a bit groggy today but lets see what I can
     get done. I want to refractor the network and i3 crap.

     * Created socket object

     :: sighs :: I don't want to refractor the I3 <grrrs>.

     * Ported wms to LPUniversity

June 3rd, 2006

     hehe, I've been a bad boy again... though not too bad. I've been
     focusing on the other areas of LPUniversity and picking the slack up
     for other people. The website has recently gotten rather popular though
     (almost overnight) and there are lots of new recruites to help out :]

     Anyhow... it is time to get some work done on this ol' mudlib of mine. <g>

     * Fixed bug in look that prevented looking at items with ids with a space
     in it without using 'look at ...'.
     * Fixed typo in look.c help function
     * You can now supply an array to add_item and use an array in the mapping
     provided to set_items in room.c to set multiple ids to the same description.

June 6th, 2006

	- We are getting over 4k hits per day now on the website :)
	- Someone is using my mudlib for their game
	- :D

	Login Daemon update:
		* if devp(user) &&query_env("start_location") will move to query_env("start_location")
			on login unless start_location equals "last_location" then will
			move to last_location on logout.
		* else if devp(user) && workroom exists will move to ~/workroom.c
		* else move to default lpuni cafe room (ie. if you are a player)

	* Modified user.c to update last_location everytime user object is moved.
	* Modified object.c (simul-efun group) to return argument to get_base if
		it is a string already.
	* Added lfun to room.c called query_items which returns a copy of
		the mapping with all the fake "items" in it.
	* look will now highlight all fake item keywords in long desc and item
		descs.

June 7th, 2006

	We have record high activity on the website and we are only on week 1 -
		amazing! :D

	* Added check to login.c to make sure the user gets moved to
		an environment.

June 9th, 2006

	I want to make a release soon so let's burn some ruber!

	* Moved /obj/void.c and /obj/void2.c to /areas/std/*
	* Updated global.h to reflect change
	* Made some tweaks to std workroom.c and moved it to /areas/std/
	* Updated mudlib to reflect
	* Reorganized /obj/ and updated mudlib to reflect.

June 10th, 2006

	Tomorrow is my Birthday :)

June 11th, 2006

	Today is my Birthday, lol.... I've been busy discussing
	design stuff with Eugenides - I'm getting him to help code
	a test project I have going for the mudlib. I'm getting Vagnor
	and Xelium (aka storm) to use my mudlib to build a game - it is
	a lot of fun! :D

	I need sleep but I'm going to start work on refractoring the user
	object first. I hope I won't do such a horrible job that I'll have
	to recode it all tomorrow <g>.

	Mob         : An object that represents a charachter
	NPC         : A non player character
	User Object : An object that contains info and functionality that
					is required for interactives.

	Gah... just got debugging now but I need sleep (I've been
	wrestling with it for 3 & 1/2 hours now).

June 12th, 2006

	Round II :D

	 - Woot, I got it :)

	* Added ability to relogin while in the mud (new function in login
	  	daemon + 'relogin' command)

	 Ok, will finish up tomorrow.

June 17th, 2006

	Ok, I want to finish the refractoring!

		* Finished refractoring
		* Added catch to cp call in new_install setup incase workroom.c
			has moved.
		* Net-dead no longer disables heart-beat.
		* Net-deads will destruct after 1h of deadness <g>
		* If idle over 5 minutes, will start printing " " to help prevent
			link-deads from inactivity.
		* Login will now display a notice when auto-admining someone
		* Login will force the body to save when auto-admining
		* Enabled heart-beat in user mobile.
		* User will now be saved when they quit
			(I can't believe this didn't already happen!)
		* Added catch when saving user data.
		* Seperated ansi parsing into /adm/daemons/ansi_parser.c
		* Added ansi parsing to login

	Wow, I got a lot more ton then I planned to. It feels good to have
	this done... I guess I'll have to code some really cool stuff to make
	use of it now. After I'm done playing with this, I'm going to refractor
	the I3 stuff - then I can start working on something new.

June 19th, 2006

	Gah, I went away this weekend and now I'm all burnt from the sun :(

	I've decided to put off refractoring the I3 stuff (I know... I know...)
	and code the ftpd w/ passive support (huzah!). I feel that an ftp server
	is more important then refractoring the I3 code.

		* Fixed finger_d.c (broken from user object refractor)

June 20th, 2006

	It is now half past 2 in the morning of the 20th and I'm proud to
	announce that I have the login proccess of the ftp server finished! :D

	Ok, It is now 12:00pm and I've completed the following this morning:
		* Fixed heart-beat bug in user mobile
		* Fixed interactive bug in login daemon
		* Fixed logging bug in login daemon

		Huzah! Ok... back to ftp server.

	Woots - I'm making excellent progress. <g>

			Ok, I'm trying to get downloading to work but it isn't.
			I'll take a fresh look at it tomorrow (which is really
			later today!).

June 23rd, 2006

	Ok. I'm rewriting from scratch. :(

June 24th, 2006

	Ok, I got the login stuff done (again) for FTP.

	Jorwyn (Pathenon) coded new emote command (it
	is pretty cool) and is working on the souls daemon.

June 25th, 2006

	* Fixed bug in std newsclient

	I'm rather tired from the funerael so I'm going to take
	tonight off (I know... I'm bad :[ ).

June 27th, 2006

	Ok, time to code! My break is over! I need to get snappin'! :D

		* Fixed bug in drop.c
		* Changes th way 'inventory' look
		* Fixed drop bug (you couldn't drop anything!)
		* Fixed memory leak in /obj/mudlib/pager/pager.c
		* Fixed memory leak in /std/user/user.c (hopefully)

	I'm not feeling very happy so I'm going to head in for the night.

June 28th, 2006

	* Fixed some bugs in the user object
	* Fixed bug in login object
	* All users will now auto-tune into localNet. Users can change
		what they auto_tune into by setting the auto_tune variable.
		You can tune into more then one thing by seperating the names
		by spaces. Ie. If you wanted to only auto tune-in to dev and wiz
		then you'd type: set_env auto_tune dev wiz
		You can also provide use "all" and the names of networks.
	* Fixed typo in std workroom.c
	* Completed NPC framework (WOOT!!)
	* Implemented Soul Daemon <g> (WOOT!!)
	* Fixed bug in security (valid.c) in isMember (more
		like a feature addition that I thought was already there).
	* Fixed driver documentation
	* Updated help.c so that developers can access driver and wiz help files.
	* Modified access and groups files
	* Added 'tags' to who (ie. admin, dev, user) - also sorted by tag.
	* Added new channel network module called announceNet where logins
		and logouts are announced. Admins may also speak on this channel
		but non-admins may not. Pretty nifty :) (NOTE TO SELF: Add security
		to channel daemon)
	* Created npc for lpuni area (It does some neat stuff too!)
	* Added a bunch of souls to the soul daemon

June 29th, 2006

	Ok, we are only a day + a few hours away from the release day and
	there is still a lot to get done. I'm going to do some administrative
	stuff (look over other contributor's code, look over parthenon's
	documentation, etc.). After that I'm going to finish the FTPD (or
	atleast get a lot done).

	Alrighty <g> Time to get onto the ftp server. :]

	Ok, got some done on the ftp server. I dunno if it'll be ready for
	the release though.

June 30th, 2006

	Lol - the truth is that I've met someone very special and they have
	been taking up a lot of my time - I know... I'm a bad boy :(
	Hopefully I'll get the ftp server done today and if not then it
	won't make it into the release - so lets get coding! :D

		* Added parthenon's emotes command (it lists all the souls)

	Some bad news - Cratylus can't get me a compiled version of MudOS
	for windows for tonight and I'm not going to be here tomorrow when
	the release actually happens (I wasn't even sure how I was going
	to manage it) so I've decided to push the release to July 7th. :)
	This will allow us to do a bit more polishing and I think the release
	will be that much better because of it :)

		* Modifed help command to now page help files
			-> REMINDER: Redo help command with new help system ASAP
		* Applied patch provided by Tricky to auto-archive logs.

	Got more work done on the ftp server but I'm not having fun :(

July 5th, 2006

	It is early morning on the 5th. Vicore was succesfully able to
	download part of a file from ftpd so I'm going to debug. I know
	I've been a bad boy for not coding with all this extra time but
	I promise to power-code the next few days <g>.

	(btw: I got the mud-farm up with ds1.1, ds2, lpuni, and lima so
		far)

	WOOT!! Vicore was able to succesfully download an entire file!
	Now to code the rest of the ftpd <g>

	* Fixed I3 connect bug (WOOT!)
	* Tweaked pager.c to destruct on reset call if environment not in edit
	* Modified force to allow us to force npcs
	* Modified force to allow devs to use it to force npcs
		(and hence moved it to /cmds/wiz/ from /cmds/adm/)
	* Applied quick fix to ls.c to increment padding when filenames are longer
		(ls seriously needs to be recoded, lol)
	* Changed look to use query_name instead of query_name when looking at someone
	* Added a bunch of cool and neat things to greeter.c

	I need to get to bed, it is almost 11am <g>

	* If target of force is "all" then it'll force all users online.
	* Rewrote command parser in mobile.c
		 It is much easier to read now and if something returns 0
		 	then it'll look for other commands with the same name.
	* Rewrote force commands - forcing users no longer worked because
		of security since I moved it to /cmds/wiz.
		There is now /cmds/wiz/force.c and /cmds/adm/force.c
		Can you guess which one does what? <g>
	* Modifed look.c to ignore case for target

	Well, bed time. I'm going to recode look tomorrow too btw.

July 11th, 2006

	Well, the server went down for like 5 days so we missed our release.
	I was super-pissed off when it happened but I'm ok now - more time
	to polish the release. I've pushed the release ahead ot July 16th. :)

	Well, there is a lot to do. There is a _NASTY_ bug in the channel
	daemon that needs fixing right this second ;]

	* Fixed channel daemon bug
	* Fixed force all bug
	* Added help for force commands
	* Fixed typo in defautl workroom.c
	* Modified update.c to move interactives back to object being updated.

July 13,th 2006

	I was so pissed off yesterday that I couldn't get anything done :(
	Some good news today though :) I heard from two people who were using
	our mudlib! :) It makes me feel good inside to know that people are
	interested.

	Cratylus released Dead Souls 2.1 yesterday - Big congratz to him.

	After this release, instead of setting public "dates" for releases,
	I think I might just draw up a feature list and then once it is completed
	do a release. Then again... that might make me lazy <g>.

	I want to get some work done on FTP server so that is what I shall do.

	Idea: Have a daemon that ensures that all other daemons and services
		are running correctly and if they aren't - shut them down and
		notify the mud.

July 14th, 2006

	- Added function 'get_mudlist' to chdmod_i3.c

	Made a lot of progress on ftp but ran into brick wall.
	I'll work on it some more later tonight.

	* If message class is "ignore_ansi" then pinkfish colour codes will
	be ignored.
	* Added argument to pager object to allow for ignoring of ansi in page.
	* Modified more command to ignore ansi when paging .c files.
	* Modified heart_beat in user mobile to print \0 instead of blank space
		for keep alive. \0 isn't rendered on terminal but should have the
		same effect.
	* Added beep command
	* Added env_var that allows you to disable outpout of error output.
		(If 'error_output' is set to 'disabled')
	* Added priv 'mudlib_obj' for objects in /obj/mudlib/*
	* Added lfun query_cap_name() to base object (object.c)
	* 'channel list' now displays modules instead of all channels.
	* Fixed command parser bug regarding case and aliases
	* Removed whitepsace at end of std workroom.c

July 16th, 2006

	Alrighty, today is the big release day :)

	* Fixed two bugs in access command
	* Tweaked a few things in valid.c to improve security
	* Updated all admin commands to be more secure.
	* Changed default auto_tune to all.
	* Uploaded Parthenon's changes/fixs to soul stuff

	Well, obvisously FTP isn't going to make it into this release. :(

	* Updated login object to use remove_interactive when reconnecting.
	* Modified makedev.c to add developer command paths to users already
		in the developer group.
	* Fixed link bug in makedev.
	* Fixed bug in body and user object relationship
	* Fixed passwd command (it was broken by user object refractor)
	* Fixed minor bug in nuke.c re: user disconnection during nuke
	* Disabled e-mail verification with a preproccessor define in login.c

	Ok, It is now 6 minutes to the 17th so I guess I should make the release
	now. :) I'll just do some quick documentation, write up release documents,
	package, release, and spam! :D

	* Added environmental variable help file
	* Added profile help file
	* Added pinkfish help file
	* Added global aliases help file
	* Modified revdev to remove admin path when dewizzing
	* Added FAQ document

	Ok, it is now 2:40am - Time to actually package and release :D

--> ALPHA-0607-R6 STARTS HERE <--

July 22nd, 2006

	The release didn't go so hot. The windows release is delayed to
	technical difficulties and I screwed up the linux package on my
	first try (I just made the fix for it yesterday). However, now
	that the linux package is fixed - I'm feeling a lot better about
	it and hopefully I'll get the windows package out for next week.

	As for the development, it continues to speed up. Parthenon is
	accomplishing a lot and I think it is encouraging some of our
	regular idlers to start tinkering away at things too. I've
	made Parthenon a temporary admin before I implement a better
	rank system. However, he has already screwed up by replacing
	mobile.c with some modifications from the release candidate which
	overwrote my changes to mobile.c since I made the release candidate
	available - I'm getting him to fix it as we speak. Am I angry? Nah -
	it is kind of funny actually but certainly shifts my priority a bit
	towards getting a more powerful rank system, better security, and more
	logging. If Parthenon hadn't followed coding standards and hadn't put
	the comment at the top with him being the last edit, I would have thought
	I was going crazy or we were having data loss - I would have probably
	reinstalled from the release (which I checked immedaitly to see if those
	changes were infact made and I just wasn't crazy) which would have put
	unessary stress on people + result in changes since the release (yeah,
	you heard me - we 've already got some stuff done <g>). Anyhow, it isn't
	that big of deal and I'm sure Parthenon will have it fixed any second
	now. <g>

	* Updated document: coding_standards

August 7th, 2006

	Welp, I've been away for a few weeks but now I'm back.
	I've decided to resign from my position at LPUni and the
	community is in the progress of figuring out how to continue
	on w/o me.

	While I was away, Parthenon and Tricky have been working hard.
	I'll be implementing some of their stuff today such as a mail
	system and expanded I3 support (including a very powerful mudlist
	command).

August 11th, 2006

	Man - I'm so lazy... I dunno whats in me but I can't seem
	to bring myself to do much lately. However, Parthenon and
	Tricky have made up for my slack.

	Today _Parthenon_ implemented the following:

		o Mail System
		o News permission system
		o Updated news client
		o Channel emotes
		o New trans command
		o Emotes in tell
		o A ton of i3 services (mudlist, tell, who, finger, etc.)
		o And other updates here and there

	I kind of feel guilty for like coding nothing and they've got
	so much done but happy that I've got such a great time. This
	is certainly motivating for me! :)

	Ok, here is what I've got done today :)

		o Improved security and integrity of security_editor object
		o Fixed a few bugs in mail system
		o Implemented virtual object support in master object
		o Added 'locate' command
		o Fixed nuke command
		o Made several improvements to trans command
		o Modified news command to allow for "check" argument
			that will check for new posts.
		o Added command history to mobile.c
		o Created history command
		o Created 'what' command - an admin command to see the
			last command executed by all users.
		o Added custom prompts (remind to document!!)

	Well, I need to get to bed. It is now 6:30am on the 12th, lol.

August 13th, 2006

	Woot - the mudlib is coming along rather nicely.

[quote]

[Admin] Parthenon: i love using the mailer... even though you are here! lol
[Admin] Tacitus: hehe :D
[Admin] Tacitus huggles the mudlib.
[Admin] Parthenon: seriously though. this thing is coming together so nicely so far.
	im really proud of it, i think its going to be freaking awesome
[Admin] Tacitus: Now we just need to get more people to use it! :)
[Admin] Parthenon grins
[Admin] Tacitus: Now with this mailer, we kind of have all the default mud
	features people expect.

[/quote]

	:D - anyhoy, lets get codin' :)

	o Made Parthenon's mail client use ed (a lot of work due to the way he set
		a few variables up and what not) - I also cleaned up the code to meet
		standards... all 1k fo it :)
	o Twaked mail daemon to have a cooler mail notification (not to mention
		more useful).
	o Enhanced custom prompts
	o Updated documentation for environmental variables
	o Updated pager object to hopefully cure it's memory leak once
	       and for all!! *stabs the pager*

October 4th, 2006

	Wow... been awhile, eh? lol. A lot has happened... I probably
	can't detail it all but basically we had some hosting issues
	and I lost the mudlib... but I just got it back tonight (ie.
	night of October 3rd) <g>. We got our new website up and
	are with a new host... things are going pretty good :].
	I've pretty much f*cked up my relations with Cratylus
	though - mostly my fault too! :(
	
	Welp, I'm really tired (it is 3:30am right now) but I best
	start coding because I want to make a release pronto and
	there are a number of nasty bugs in the mudlib right now
	(including several security related ones). 
	
	Luckily I write	a lot of stuff to disk instead of keeping
	it in memory (in the mudlib), so when I booted the mud tonight
	it was like opening up time capsle. Heck, even the intermud logs
	were perserved, lol. Kind of freaky but maybe you don't think so -
	meh. Anyhow, my point is is that I made a list of the bugs so
	I can get started right away <g>. 
	
	Tidbit: Oh, (sorry to jumpy all around), but I'm now an admin 
	on this	TMI-II mud called Neverland. So far it has been a lot 
	of fun!
	
	Anyhows, to the coding... <g>
	
	... Hmmm... the more I surf the more I get the idea that
	this isn't exactly the LATEST lpuni but that a few days
	are shaved off or something. *shrugs* Oh wells... I can't
	seem to actually find that list of bugs! Maybe I didn't post
	it to the news groups?
	
	Luck for me! I had them written down on paper and in my
	physical lpuniversity file folder <g>. WOOT!
	
	* Fixed a bug in valid.c
	* Fixed bugs in write_prompt() in mobile.c
	* cd will now always ensure cwd ends with forward slash
	* Fixed code in who.c to use query_name() instead of query("name")
	* Same for people.c (now they don't error out when someone is logging in)
	* Modified set_env to ignore pinkfish in output.
	* Fixed bug in passwd.c so that it now works again
	* Hopefully finally fixed memory leak in pager object! :]
	* Fixed bug in news client
	* Added abiltiy to finger groups in finger daemon
	* Added new admin command, rebirth (it updates all the user
	    objects).
	
    Woot. I got all the bugs on my list fixed except for the fact
    that the news client and look command need to be rewritten.
    
    Ok, just confirmed that there is a few days of dataloss.
    Tricky's new i3 stuff is missing (I got it in a tar so no
    biggie). I doubt anything too important is missing. :]
    
    Welp, it is now 6:30am and someone just setup a new lpuni
    mudlib! I'm not over there giving them a hand (they already
    have a small area built it appears too! Wow!).
    
October 5th, 2006

    Update on that mud that is using our lib, Axentia, it is
    a spanish mud and they've already translated a majority of
    the lib to spanish! wow! Pretty cool, eh?
    
    Furthermore, Today is my little Sister's birthday!
        (Everyone say "Happy Birthday Natasha!")
    
    Welp, this weekend I'm going to make a release - but
    I gotta run now. *waves*
    
    * Fixed xverb argument case alias bug that 
        I introduced again when I rewrote command parser.
        (I've been meaning to fix it for awhile now. <g>).
    * Optimized query_path() in mobile.c using copy() efun
    * Coded a very nice "which" command. <g>
    * Implemented Kenon's resolve_path which actually
        works like it should. Woot!
    * Implemented Tricky's fixs to the tell command for
        I3 emotin.
    
October 6th, 2006

    Still wake, <g>. It is now 1:54am and I figure I should
    get some sleep... but I rather code, lol. I've been rather
    sick for the last week (and still am, was throwing up earlier
    tonight) - I bet if I got more sleep I'd get over it quicker. Doh.
    
    <-- Line 3052. This journal sure is getting long, eh? :]
    
    Anyhows, back to the coding!
    
    * Fixed bug in new group fingering feature. It was erroring out
        if the group didn't exist (stupid me, I forgot to check for that!)
    * Fixed a bug in wms. Aside from needing a rewrite, it is fully
        functional (though the integration features have been disabled.) 
    * Added several new souls to the souls database.   
    
    Shall I or Shall I not? That is the question. Shall I recode
    look now or shall I wait until I get some sleep? I... shall! :D 
    
    WOOT! Rewrote look.c totally and debugged it. Some cool new features
    include the ability to have objects that make additions to the user's
    long description (ex. "This person has a magical aurora" or something)
    via set("extra_long", string blah) which is used by TMI-II. Also, you
    can look at objects that other users carry. An example would be
    "look at toy car on eugenides". :]. The code is all nice and neat too
    plus has some nice use of filter, implode, and functionals. 
    
    * Recoded look.c + added some new features to it
       
	Welps, it is now 4:42am - I spent way too much time chatting on intermud
	night, gah. So... should I go to bed or code some more? *ponders*
	
	I've decided to code the "splash screen" feature I wanted for the
	login system. Basically, it uses replace_string() to parse and replace
	tokens. ie. %mud_name
	
	* Added splash screen token parser to login object
	* Fixed security bug in login object
	* Wrote documentation for login object
	
	Ok, now it is 6:13am :] Sleep... or more code? Hmm... *ponders*
	
	* Added check to ed.c so that it doesn't start editing
	    directories, lol
	
	*yanws* I'm getting pretty sleepy! - Oh! I know what I can add,
	more logging! :D
	
	* Added logging to ed, force, makedev, nuke, revdev, and help
	* Fixed eval.c so that it'll display runtime errors (also made
	    the output all together more pretty)
	    
	7:16am now... I think sleep is soon. lol
	
	*snores* -- Ok, It is now 4:02pm and I'm ready to get some more
	codin' done! First off, I just noticed that user objects (not
	the mobile) are not getting destructed correctly. Lets fix that.
	
	Alrighty, I think I got it but I'm going to have to test it later.
	
October 9th, 2006

    Gah, internet was down all weeked... -_-
    It is now monday night and I need to make the release. Can we do it?
    Well... lets try! :)
    
    * Implemented Kenon's new ls command
    * Implemented Tricky's I3 colour by hash code
    * Implemented Scifi's jcheck wiz command
    * Implemented Scifi's jlo wiz command
    
    * Updated release documents

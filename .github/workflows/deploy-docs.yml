name: CI and Deploy Documentation

on:
  push:
    branches:
      - main  # or your default branch
    paths:
      - 'doc/wiki/**'

jobs:
  build-fluffos:
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - CC: "gcc"
            CXX: "g++"
          - CC: "clang"
            CXX: "clang++"
        build: ["Debug", "RelWithDebInfo"]
        os: ["ubuntu-22.04"]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout FluffOS
      uses: actions/checkout@v4
      with:
        repository: 'fluffos/fluffos'
        path: 'fluffos'

    - name: Install packages
      run: |
        sudo apt update
        sudo apt install -y build-essential autoconf automake bison expect libmysqlclient-dev libpcre3-dev libpq-dev libsqlite3-dev libssl-dev libtool libz-dev telnet libgtest-dev libjemalloc-dev
    - name: Compile FluffOS
      working-directory: fluffos
      env: ${{ matrix.compiler }}
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DPACKAGE_DB_SQLITE=2 ..
        VERBOSE=1 make -j 2 install
    - name: Run Tests
      working-directory: fluffos/build
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      run: make test
    - name: Testsuite
      working-directory: fluffos/testsuite
      run: ../build/bin/driver etc/config.test -ftest

  run-game:
    needs: build-fluffos
    runs-on: ubuntu-latest

    steps:
    - name: Checkout game repository
      uses: actions/checkout@v2

    - name: Run game with builddocs flag
      run: |
        ./fluffos/build/bin/driver adm/etc/config.github -fbuilddocs

  deploy-docs:
    needs: run-game
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r doc/wiki/requirements.txt

    - name: Build documentation
      run: |
        cd doc/wiki
        make html

    - name: Deploy to Read the Docs
      env:
        READTHEDOCS_TOKEN: ${{ secrets.READTHEDOCS_TOKEN }}
      run: |
        curl -X POST -d "" https://readthedocs.org/api/v3/projects/gLPU/versions/latest/build/
